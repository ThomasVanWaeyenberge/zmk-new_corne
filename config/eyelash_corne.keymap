#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <7 8 9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41 45 46 47 42 43 44>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33 34 42 43 44 45 46 47>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TILDE       &kp Q                &kp W            &kp E              &kp R            &kp T                                    &rgb_ug RGB_BRI                   &kp Y            &kp U             &kp I               &kp O             &kp P                    &bt BT_NXT
&kp LEFT_SHIFT  &hml LEFT_CONTROL A  &hml LEFT_ALT S  &hml LEFT_SHIFT D  &hml LEFT_GUI F  &kp G                   &rgb_ug RGB_EFR  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &kp H            &hmr RIGHT_GUI J  &hmr RIGHT_SHIFT K  &hmr RIGHT_ALT L  &hmr RIGHT_CONTROL SEMI  &kp RIGHT_SHIFT
&kp CAPSLOCK    &kp Z                &kp X            &kp C              &kp V            &kp B      &kp SPACE                     &rgb_ug RGB_BRD                   &kp N            &kp M             &kp COMMA           &kp DOT           &kp FSLH                 &bt BT_CLR
                                                      &lt 1 ESCAPE       &lt 3 SPACE      &lt 2 TAB                                                                  &lt 2 BACKSPACE  &kp ENTER         &lt 1 DELETE
            >;

            // sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            sensor-bindings = <&inc_dec_kp N2 N1>;
        };

        layer_numbers {
            display-name = "Numbers";
            bindings = <
&kp TILDE       &kp Q                &kp W            &kp E              &kp R            &kp T                                    &rgb_ug RGB_BRI                   &kp Y            &kp N7        &kp N8        &kp N9        &kp P     &bt BT_NXT
&kp LEFT_SHIFT  &hml LEFT_CONTROL A  &hml LEFT_ALT S  &hml LEFT_SHIFT D  &hml LEFT_GUI F  &kp G                   &rgb_ug RGB_EFR  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &kp H            &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0    &kp RIGHT_SHIFT
&kp CAPSLOCK    &kp Z                &kp X            &kp C              &kp V            &kp B      &kp SPACE                     &rgb_ug RGB_BRD                   &kp N            &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp FSLH  &bt BT_CLR
                                                      &lt 1 ESCAPE       &kp SPACE        &lt 2 TAB                                                                  &lt 2 BACKSPACE  &kp ENTER     &lt 1 DELETE
            >;

            sensor-bindings = <&inc_dec_kp N2 N1>;
        };

        layer_symbols {
            display-name = "SYMBOLS";
            bindings = <
&kp TILDE       &trans           &kp PIPE              &kp CARET     &kp PERCENT  &kp LEFT_PARENTHESIS                                &rgb_ug RGB_BRI                   &kp RIGHT_PARENTHESIS  &kp EQUAL       &kp PLUS      &kp AMPERSAND      &kp PIPE          &bt BT_NXT
&kp LEFT_SHIFT  &kp EXCLAMATION  &kp AT_SIGN           &kp HASH      &kp DOLLAR   &kp LEFT_BRACE                     &rgb_ug RGB_EFR  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &kp RIGHT_BRACE        &kp MINUS       &kp ASTERISK  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &kp RIGHT_SHIFT
&kp CAPSLOCK    &trans           &kp NON_US_BACKSLASH  &kp GRAVE     &kp TILDE    &kp LEFT_BRACKET      &kp SPACE                     &rgb_ug RGB_BRD                   &kp RIGHT_BRACKET      &kp UNDERSCORE  &kp COMMA     &kp DOT            &kp FSLH          &bt BT_CLR
                                                       &lt 1 ESCAPE  &kp SPACE    &lt 2 TAB                                                                             &lt 2 BACKSPACE        &kp ENTER       &lt 1 DELETE
            >;

            sensor-bindings = <&inc_dec_kp N2 N1>;
        };

        layer_nav {
            display-name = "NAV";
            bindings = <
&kp TILDE       &kp Q                &kp W            &kp END            &kp R            &kp T                                    &rgb_ug RGB_BRI                   &kp PAGE_UP      &kp HOME      &kp END         &kp K_MUTE       &kp C_VOLUME_UP    &kp C_BRIGHTNESS_INC
&kp LEFT_SHIFT  &hml LEFT_CONTROL A  &hml LEFT_ALT S  &hml LEFT_SHIFT D  &hml LEFT_GUI F  &kp G                   &rgb_ug RGB_EFR  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &kp LEFT_ARROW   &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp C_PLAY_PAUSE   &kp K_SLEEP
&kp CAPSLOCK    &kp Z                &kp X            &kp C              &kp V            &kp B      &kp SPACE                     &rgb_ug RGB_BRD                   &kp PAGE_DOWN    &trans        &trans          &kp PRINTSCREEN  &kp C_VOLUME_DOWN  &kp C_BRIGHTNESS_DEC
                                                      &lt 1 ESCAPE       &kp SPACE        &lt 2 TAB                                                                  &lt 2 BACKSPACE  &kp ENTER     &lt 1 DELETE
            >;

            sensor-bindings = <&inc_dec_kp N2 N1>;
        };
    };
};
