#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&out OUT_TOG    &kp Q  &kp W  &kp E         &kp R      &kp T                           &bl BL_INC          &kp Y            &kp U      &kp I         &kp O    &kp P     &bl BL_TOG
&kp LEFT_SHIFT  &kp A  &kp S  &kp D         &kp F      &kp G                   &trans  &bl BL_TOG  &trans  &kp H            &kp J      &kp K         &kp L    &kp SEMI  &kp RIGHT_SHIFT
&kp CAPSLOCK    &kp Z  &kp X  &kp C         &kp V      &kp B      &kp SPACE            &bl BL_DEC          &kp N            &kp M      &kp COMMA     &kp DOT  &kp FSLH  &sys_reset
                              &lt 1 ESCAPE  &kp SPACE  &lt 2 TAB                                           &lt 2 BACKSPACE  &kp ENTER  &lt 1 DELETE
            >;

            // sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            sensor-bindings = <&inc_dec_kp N2 N1>;
        };

        NUMBER {
            display-name = "NUMBER";
            bindings = <
&out OUT_TOG    &kp Q  &kp W  &kp E         &kp R      &kp T                           &bl BL_INC          &kp Y          &kp U      &kp I       &kp O    &kp P     &bl BL_TOG
&kp LEFT_SHIFT  &kp A  &kp S  &kp D         &kp F      &kp G                   &trans  &bl BL_TOG  &trans  &kp H          &kp J      &kp K       &kp L    &kp SEMI  &kp RIGHT_SHIFT
&kp CAPSLOCK    &kp Z  &kp X  &kp C         &kp V      &kp B      &kp SPACE            &bl BL_DEC          &kp N          &kp M      &kp COMMA   &kp DOT  &kp FSLH  &sys_reset
                              &lt 1 ESCAPE  &kp SPACE  &lt 2 TAB                                           &kp BACKSPACE  &kp ENTER  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp N2 N1>;
        };

        SYMBOL {
            display-name = "SYMBOL";
            bindings = <
&out OUT_TOG    &kp Q  &kp W  &kp E         &kp R      &kp T                           &bl BL_INC          &kp Y          &kp U      &kp I       &kp O    &kp P     &bl BL_TOG
&kp LEFT_SHIFT  &kp A  &kp S  &kp D         &kp F      &kp G                   &trans  &bl BL_TOG  &trans  &kp H          &kp J      &kp K       &kp L    &kp SEMI  &kp RIGHT_SHIFT
&kp CAPSLOCK    &kp Z  &kp X  &kp C         &kp V      &kp B      &kp SPACE            &bl BL_DEC          &kp N          &kp M      &kp COMMA   &kp DOT  &kp FSLH  &sys_reset
                              &lt 1 ESCAPE  &kp SPACE  &lt 2 TAB                                           &kp BACKSPACE  &kp ENTER  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp N2 N1>;
        };
    };
};
